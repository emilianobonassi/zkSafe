pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import "forge-std/console.sol";

import "../src/zkConnectDummyModule.sol";

interface GnosisSafeModuleManager {
    /// @param module Module address
    function enableModule(address module) external;
}

contract zkConnectDummyModuleTest is Test {
    uint256 goerliFork;

    function setUp() public {
        goerliFork = vm.createFork(vm.envString("GOERLI_RPC_URL"));
    }

    function testExecTxUsingZkConnectProof() public {
        vm.selectFork(goerliFork);
        assertEq(vm.activeFork(), goerliFork);

        address _safe = 0x02a3f8233efEA083666efFe40392b940c412669F;
        bytes16 _appId = 0x11627eb6dd3358f8f4434a94bd15e6c5;
        bytes16 _groupId = 0x8837536887a7f6458977b10cc464df4b;

        zkConnectDummyModule zcm = new zkConnectDummyModule(_safe, _appId, _groupId);

        vm.startPrank(_safe);
        GnosisSafeModuleManager safe = GnosisSafeModuleManager(_safe);

        safe.enableModule(address(zcm));

        bytes
            memory zkConnectResponse = hex"000000000000000000000000000000000000000000000000000000000000002011627eb6dd3358f8f4434a94bd15e6c500000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007a6b2d636f6e6e6563742d76320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000022068796472612d73322e3100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000005408837536887a7f6458977b10cc464df4b000000000000000000000000000000006c617465737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000ac00bdc10198eff072297e2f661f380bb003e7e47f9f15db8420b865c303e19a224252c4f8e3a9a1e572434f7f9a6604f8d99b0cbc28e4a26d1600bc49f57fdfc432741a9e99fcc0732eeaef1c278f2782a83c721f7ef76dc74ae40d441abfaa67f2c665c9a55b5b41b7967b5e6a9d7e705dfeeba0df5d94b06618fdd6897628d0507542a26fbeabb101c1537dc00f6bda633b18caf19f351bb89b546c03f2ac9211d8dd1cde5d1392a7f15e4d47d6686651f2ef01e7c17055f03855830af96627f2de5fb417a01c1c158a1c3059ea71eef82481a9cd1cbb102a2e898f161f22dea2695684d6576912175aef287e7896d9cf0d9c9c715b1aa79269270a147c60a010000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5632ab71fb864979b71106135acfa84afc1d756cda74f8f258896f896b4864f025630423b4c502f1cd4179a425723bf1e15c843733af2ecdee9aef6a0451ef2db74179ad3cf393d9e9b6ee9cf6cfcee08244ac306349e725a2fc9ac193cebe432f82aafab186a229c8f01f3d921829ed5a1a823bc26c8e329e5edc177ed62d1b03a2505cc6c7f1a162ed207d23202ed49906c6bb56b0828f7a9f4474d55477cc9cd0000000000000000000000000000000000000000000000000000000000000001276eb682c544b5f218d7259fc1622e911bf9a3d480011edd783c14d81ffffffe00000000000000000000000000000000000000000000000000000000000000002a9be64fbfdee101412494a9944d6524267f81bef60f32fcbf2f9cac934f8aa10000000000000000000000000000000011627eb6dd3358f8f4434a94bd15e6c5000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

        // sending 0 to emiliano.eth
        zcm.execTransactionFromModule(
            0x394495a3800D1504b5686D398836BaEFEBd0C5B7,
            0,
            "",
            Enum.Operation.Call,
            zkConnectResponse
        );
    }
}
